{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xander\\\\.cursor-tutor\\\\projects\\\\topside\\\\javascript\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries\nimport React, { useState } from 'react'; // useState is a Hook that lets you add React state to function components\nimport axios from 'axios'; // axios is a library for making HTTP requests\n\n// Define the Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // Create state variables for username and password\n  const [username, setUsername] = useState(''); // The initial value is an empty string\n  const [password, setPassword] = useState(''); // The initial value is an empty string\n\n  // Define the function to be called when the form is submitted\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    // Send a POST request to '/api/login' with the username and password as data\n    const response = await axios.post('/api/login', {\n      username,\n      password\n    });\n\n    // TODO: Handle the response. This might involve setting more state variables,\n    // redirecting the user to another page, or other side effects.\n  };\n\n  // Render the component\n  return (\n    /*#__PURE__*/\n    // When the form is submitted, call the handleSubmit function\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// Export the Login component so it can be imported and used in other files\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","response","post","onSubmit","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Xander/.cursor-tutor/projects/topside/javascript/src/components/Login.js"],"sourcesContent":["// Import necessary libraries\r\nimport React, { useState } from 'react'; // useState is a Hook that lets you add React state to function components\r\nimport axios from 'axios'; // axios is a library for making HTTP requests\r\n\r\n// Define the Login component\r\nfunction Login() {\r\n  // Create state variables for username and password\r\n  const [username, setUsername] = useState(''); // The initial value is an empty string\r\n  const [password, setPassword] = useState(''); // The initial value is an empty string\r\n\r\n  // Define the function to be called when the form is submitted\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent the default form submission behavior\r\n\r\n    // Send a POST request to '/api/login' with the username and password as data\r\n    const response = await axios.post('/api/login', { username, password });\r\n\r\n    // TODO: Handle the response. This might involve setting more state variables,\r\n    // redirecting the user to another page, or other side effects.\r\n  };\r\n\r\n  // Render the component\r\n  return (\r\n    // When the form is submitted, call the handleSubmit function\r\n    <form onSubmit={handleSubmit}>\r\n      {/* When the value of the input field changes, update the username state variable */}\r\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\r\n\r\n      {/* When the value of the input field changes, update the password state variable */}\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n\r\n      {/* This button submits the form */}\r\n      <button type=\"submit\">Log In</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// Export the Login component so it can be imported and used in other files\r\nexport default Login;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB;IACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,YAAY,EAAE;MAAER,QAAQ;MAAEE;IAAS,CAAC,CAAC;;IAEvE;IACA;EACF,CAAC;;EAED;EACA;IAAA;IACE;IACAL,OAAA;MAAMY,QAAQ,EAAEL,YAAa;MAAAM,QAAA,gBAE3Bb,OAAA;QAAOc,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEZ,QAAS;QAACa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG3GvB,OAAA;QAAOc,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEV,QAAS;QAACW,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG/GvB,OAAA;QAAQc,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;AAEX;;AAEA;AAAArB,EAAA,CAhCSD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}